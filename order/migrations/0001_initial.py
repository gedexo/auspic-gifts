# Generated by Django 5.0.1 on 2025-03-28 09:56

import django.db.models.deletion
import order.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100)),
                ("order", models.PositiveIntegerField(unique=True)),
            ],
            options={
                "verbose_name": "City",
                "verbose_name_plural": "Cities",
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="DestinationPlace",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("code", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="GiftCard",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("code", models.CharField(max_length=20, unique=True)),
                ("balance", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_active", models.BooleanField(default=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("is_active", models.BooleanField(blank=True, choices=[(True, "Yes"), (False, "No")], default=True, verbose_name="Mark as Active")),
                ("razorpay_payment_id", models.CharField(blank=True, max_length=200, null=True)),
                ("razorpay_order_id", models.CharField(blank=True, max_length=200, null=True)),
                ("razorpay_signature", models.CharField(blank=True, max_length=200, null=True)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("payable", models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ("order_id", models.CharField(default=order.models.generate_order_id, max_length=255)),
                ("is_ordered", models.BooleanField(default=False)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("payment_method", models.CharField(choices=[("COD", "Cash On Delivery"), ("OP", "Online Payment")], default="COD", max_length=20)),
                ("full_name", models.CharField(max_length=100)),
                ("address_line_1", models.CharField(max_length=100, verbose_name="Complete Address")),
                ("address_line_2", models.CharField(max_length=100, verbose_name="Landmark")),
                ("state", models.CharField(max_length=200, null=True)),
                ("district", models.CharField(max_length=200, null=True)),
                ("city", models.CharField(max_length=100)),
                ("pin_code", models.IntegerField()),
                ("mobile_no", models.CharField(max_length=15)),
                ("alternative_no", models.CharField(blank=True, max_length=15, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("gift_code", models.CharField(blank=True, max_length=20, null=True)),
                ("gift_discount", models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ("delivery_date", models.DateField(blank=True, null=True)),
                ("time_slot", models.CharField(choices=[("9-12", "9:00 AM - 12:00 PM"), ("12-6", "12:00 PM - 6:00 PM")], default="9-12", max_length=10)),
                ("subtotal", models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ("service_fee", models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ("shipping_fee", models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Placed", "Order Placed"),
                            ("Shipped", "Order Shipped"),
                            ("InTransit", "In Transit"),
                            ("Delivered", "Order Delivered"),
                            ("Cancelled", "Order Cancelled"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(choices=[("Pending", "Pending"), ("Failed", "Failed"), ("Success", "Success"), ("Cancelled", "Cancelled")], default="Pending", max_length=50),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="creator_%(class)s_objects", to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ("-id",),
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(blank=True, choices=[(True, "Yes"), (False, "No")], default=True, verbose_name="Mark as Active")),
                ("quantity", models.IntegerField(default=1)),
                ("amount", models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ("cakemessage", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name="creator_%(class)s_objects", to=settings.AUTH_USER_MODEL
                    ),
                ),
                ("order", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="order.order")),
                ("product_variant", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="products.productvariant")),
            ],
            options={
                "ordering": ["-created"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tracking",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("mobile_number", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "procedure",
                    models.CharField(
                        choices=[("Departed", "Departed From Shop"), ("Dispatch", "Dispatch"), ("Destination", "At Destination"), ("Deliverd", "Deliverd"), ("Pending", "Pending")],
                        default="Departed",
                        max_length=100,
                        verbose_name="status",
                    ),
                ),
                ("destination_address", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "pending_reason",
                    models.CharField(
                        blank=True,
                        choices=[("As per guest request", "As per guest request"), ("Guest unreachable on phone", "Guest unreachable on phone"), ("Transiting", "Transiting")],
                        help_text="if status is pending",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("link", models.CharField(blank=True, max_length=1000, null=True, unique=True)),
                ("destination_city", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="order.city")),
                (
                    "destination_place",
                    models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="order.destinationplace", verbose_name="Pickup Location"),
                ),
                ("tracking_id", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="order.order", verbose_name="Tracking ID")),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalInfo",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateField(blank=True, null=True)),
                ("title", models.CharField(max_length=100)),
                ("tracking", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="order.tracking")),
            ],
        ),
        migrations.CreateModel(
            name="Wishlist",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("product_varients", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="products.productvariant")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
